package com.alanjz.meerkat.util.numerics

import com.alanjz.meerkat.util.iterator.bitmask.InOrderIterator

object BitMask {

  type BitMask = Long

  val all = -1l
  val empty = 0l

  def mkString(mask : BitMask) = {
    val builder = StringBuilder.newBuilder
    for (i <- 7 to 0 by -1) {
      for (j <- 0 to 7) {
        if ((mask & (1l << (8 * i + j))) != 0) {
          builder += '1'
        }
        else {
          builder += '0'
        }
      }
     builder += '\n'
    }
    builder.mkString
  }

  private val index_bsf_64 = Array(
    0,  1, 48,  2, 57, 49, 28,  3,
    61, 58, 50, 42, 38, 29, 17,  4,
    62, 55, 59, 36, 53, 51, 43, 22,
    45, 39, 33, 30, 24, 18, 12,  5,
    63, 47, 56, 27, 60, 41, 37, 16,
    54, 35, 52, 21, 44, 32, 23, 11,
    46, 26, 40, 15, 34, 20, 31, 10,
    25, 14, 19,  9, 13,  8,  7,  6
  )

  private val debruijn64 : BitMask = 0x03f79d71b4cb0a89l

  /**
   * bitScanForward
   * @author Martin LÃ¤uter (1997)
   *         Charles E. Leiserson
   *         Harald Prokop
   *         Keith H. Randall
   * "Using de Bruijn Sequences to Index a 1 in a Computer Word"
   * @param bb bitboard to scan
   * @return index (0..63) of least significant one bit
   */
  def bitScanForward(bb : BitMask) : Int =
    if(bb == empty) return -1
    else index_bsf_64((((bb & -bb) * debruijn64) >>> 58).toInt)

  private val index_bsr_64 = Array(
    0, 47,  1, 56, 48, 27,  2, 60,
    57, 49, 41, 37, 28, 16,  3, 61,
    54, 58, 35, 52, 50, 42, 21, 44,
    38, 32, 29, 23, 17, 11,  4, 62,
    46, 55, 26, 59, 40, 36, 15, 53,
    34, 51, 20, 43, 31, 22, 10, 45,
    25, 39, 14, 33, 19, 30,  9, 24,
    13, 18,  8, 12,  7,  6,  5, 63
  )

  /**
   * bitScanReverse
   * @authors Kim Walisch, Mark Dickinson
   * @param bb bitboard to scan
   * @return index (0..63) of most significant one bit
   */
  def bitScanReverse(bb : BitMask) : Int = {
    var bm = bb
    if(bb == empty) return -1
    bm |= bm >>> 1
    bm |= bm >>> 2
    bm |= bm >>> 4
    bm |= bm >>> 8
    bm |= bm >>> 16
    bm |= bm >>> 32
    index_bsr_64(((bm * debruijn64) >>> 58).toInt)
  }


  object File {
    val A = 72340172838076673l
    val B = 144680345676153346l
    val C = 289360691352306692l
    val D = 578721382704613384l
    val E = 1157442765409226768l
    val F = 2314885530818453536l
    val G = 4629771061636907072l
    val H = -9187201950435737472l
  }

  object Rank {
    val _1 = 255l
    val _2 = 65280l
    val _3 = 16711680l
    val _4 = 4278190080l
    val _5 = 1095216660480l
    val _6 = 280375465082880l
    val _7 = 71776119061217280l
    val _8 = -72057594037927936l
  }

  object Square {

    val A1 = 1l
    val B1 = 2l
    val C1 = 4l
    val D1 = 8l
    val E1 = 16l
    val F1 = 32l
    val G1 = 64l
    val H1 = 128l
    val A2 = 256l
    val B2 = 512l
    val C2 = 1024l
    val D2 = 2048l
    val E2 = 4096l
    val F2 = 8192l
    val G2 = 16384l
    val H2 = 32768l
    val A3 = 65536l
    val B3 = 131072l
    val C3 = 262144l
    val D3 = 524288l
    val E3 = 1048576l
    val F3 = 2097152l
    val G3 = 4194304l
    val H3 = 8388608l
    val A4 = 16777216l
    val B4 = 33554432l
    val C4 = 67108864l
    val D4 = 134217728l
    val E4 = 268435456l
    val F4 = 536870912l
    val G4 = 1073741824l
    val H4 = 2147483648l
    val A5 = 4294967296l
    val B5 = 8589934592l
    val C5 = 17179869184l
    val D5 = 34359738368l
    val E5 = 68719476736l
    val F5 = 137438953472l
    val G5 = 274877906944l
    val H5 = 549755813888l
    val A6 = 1099511627776l
    val B6 = 2199023255552l
    val C6 = 4398046511104l
    val D6 = 8796093022208l
    val E6 = 17592186044416l
    val F6 = 35184372088832l
    val G6 = 70368744177664l
    val H6 = 140737488355328l
    val A7 = 281474976710656l
    val B7 = 562949953421312l
    val C7 = 1125899906842624l
    val D7 = 2251799813685248l
    val E7 = 4503599627370496l
    val F7 = 9007199254740992l
    val G7 = 18014398509481984l
    val H7 = 36028797018963968l
    val A8 = 72057594037927936l
    val B8 = 144115188075855872l
    val C8 = 288230376151711744l
    val D8 = 576460752303423488l
    val E8 = 1152921504606846976l
    val F8 = 2305843009213693952l
    val G8 = 4611686018427387904l
    val H8 = -9223372036854775808l
  }

  object Ray {
    val north = Array[BitMask](
      72340172838076672l, 144680345676153344l, 289360691352306688l, 578721382704613376l,
      1157442765409226752l, 2314885530818453504l, 4629771061636907008l, -9187201950435737600l,
      72340172838076416l, 144680345676152832l, 289360691352305664l, 578721382704611328l,
      1157442765409222656l, 2314885530818445312l, 4629771061636890624l, -9187201950435770368l,
      72340172838010880l, 144680345676021760l, 289360691352043520l, 578721382704087040l,
      1157442765408174080l, 2314885530816348160l, 4629771061632696320l, -9187201950444158976l,
      72340172821233664l, 144680345642467328l, 289360691284934656l, 578721382569869312l,
      1157442765139738624l, 2314885530279477248l, 4629771060558954496l, -9187201952591642624l,
      72340168526266368l, 144680337052532736l, 289360674105065472l, 578721348210130944l,
      1157442696420261888l, 2314885392840523776l, 4629770785681047552l, -9187202502347456512l,
      72339069014638592l, 144678138029277184l, 289356276058554368l, 578712552117108736l,
      1157425104234217472l, 2314850208468434944l, 4629700416936869888l, -9187343239835811840l,
      72057594037927936l, 144115188075855872l, 288230376151711744l, 576460752303423488l,
      1152921504606846976l, 2305843009213693952l, 4611686018427387904l, -9223372036854775808l,
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l
    )
    val northeast = Array[BitMask](
      -9205322385119247872l, 36099303471055872l, 141012904183808l, 550831656960l,
      2151686144l, 8404992l, 32768l, 0l,
      4620710844295151616l, -9205322385119248384l, 36099303471054848l, 141012904181760l,
      550831652864l, 2151677952l, 8388608l, 0l,
      2310355422147510272l, 4620710844295020544l, -9205322385119510528l, 36099303470530560l,
      141012903133184l, 550829555712l, 2147483648l, 0l,
      1155177711056977920l, 2310355422113955840l, 4620710844227911680l, -9205322385253728256l,
      36099303202095104l, 141012366262272l, 549755813888l, 0l,
      577588851233521664l, 1155177702467043328l, 2310355404934086656l, 4620710809868173312l,
      -9205322453973204992l, 36099165763141632l, 140737488355328l, 0l,
      288793326105133056l, 577586652210266112l, 1155173304420532224l, 2310346608841064448l,
      4620693217682128896l, -9205357638345293824l, 36028797018963968l, 0l,
      144115188075855872l, 288230376151711744l, 576460752303423488l, 1152921504606846976l,
      2305843009213693952l, 4611686018427387904l, -9223372036854775808l, 0l,
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l
    )
    val east = Array[BitMask](
      254l, 252l, 248l, 240l,
      224l, 192l, 128l, 0l,
      65024l, 64512l, 63488l, 61440l,
      57344l, 49152l, 32768l, 0l,
      16646144l, 16515072l, 16252928l, 15728640l,
      14680064l, 12582912l, 8388608l, 0l,
      4261412864l, 4227858432l, 4160749568l, 4026531840l,
      3758096384l, 3221225472l, 2147483648l, 0l,
      1090921693184l, 1082331758592l, 1065151889408l, 1030792151040l,
      962072674304l, 824633720832l, 549755813888l, 0l,
      279275953455104l, 277076930199552l, 272678883688448l, 263882790666240l,
      246290604621824l, 211106232532992l, 140737488355328l, 0l,
      71494644084506624l, 70931694131085312l, 69805794224242688l, 67553994410557440l,
      63050394783186944l, 54043195528445952l, 36028797018963968l, 0l,
      -144115188075855872l, -288230376151711744l, -576460752303423488l, -1152921504606846976l,
      -2305843009213693952l, -4611686018427387904l, -9223372036854775808l, 0l
    )
    val southeast = Array[BitMask](
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l,
      2l, 4l, 8l, 16l,
      32l, 64l, 128l, 0l,
      516l, 1032l, 2064l, 4128l,
      8256l, 16512l, 32768l, 0l,
      132104l, 264208l, 528416l, 1056832l,
      2113664l, 4227072l, 8388608l, 0l,
      33818640l, 67637280l, 135274560l, 270549120l,
      541097984l, 1082130432l, 2147483648l, 0l,
      8657571872l, 17315143744l, 34630287488l, 69260574720l,
      138521083904l, 277025390592l, 549755813888l, 0l,
      2216338399296l, 4432676798592l, 8865353596928l, 17730707128320l,
      35461397479424l, 70918499991552l, 140737488355328l, 0l,
      567382630219904l, 1134765260439552l, 2269530520813568l, 4539061024849920l,
      9078117754732544l, 18155135997837312l, 36028797018963968l, 0l
    )
    val south = Array[BitMask](
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l,
      1l, 2l, 4l, 8l,
      16l, 32l, 64l, 128l,
      257l, 514l, 1028l, 2056l,
      4112l, 8224l, 16448l, 32896l,
      65793l, 131586l, 263172l, 526344l,
      1052688l, 2105376l, 4210752l, 8421504l,
      16843009l, 33686018l, 67372036l, 134744072l,
      269488144l, 538976288l, 1077952576l, 2155905152l,
      4311810305l, 8623620610l, 17247241220l, 34494482440l,
      68988964880l, 137977929760l, 275955859520l, 551911719040l,
      1103823438081l, 2207646876162l, 4415293752324l, 8830587504648l,
      17661175009296l, 35322350018592l, 70644700037184l, 141289400074368l,
      282578800148737l, 565157600297474l, 1130315200594948l, 2260630401189896l,
      4521260802379792l, 9042521604759584l, 18085043209519168l, 36170086419038336l
    )
    val southwest = Array[BitMask](
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l,
      0l, 1l, 2l, 4l,
      8l, 16l, 32l, 64l,
      0l, 256l, 513l, 1026l,
      2052l, 4104l, 8208l, 16416l,
      0l, 65536l, 131328l, 262657l,
      525314l, 1050628l, 2101256l, 4202512l,
      0l, 16777216l, 33619968l, 67240192l,
      134480385l, 268960770l, 537921540l, 1075843080l,
      0l, 4294967296l, 8606711808l, 17213489152l,
      34426978560l, 68853957121l, 137707914242l, 275415828484l,
      0l, 1099511627776l, 2203318222848l, 4406653222912l,
      8813306511360l, 17626613022976l, 35253226045953l, 70506452091906l,
      0l, 281474976710656l, 564049465049088l, 1128103225065472l,
      2256206466908160l, 4512412933881856l, 9024825867763968l, 18049651735527937l
    )
    val west = Array[BitMask](
      0l, 1l, 3l, 7l,
      15l, 31l, 63l, 127l,
      0l, 256l, 768l, 1792l,
      3840l, 7936l, 16128l, 32512l,
      0l, 65536l, 196608l, 458752l,
      983040l, 2031616l, 4128768l, 8323072l,
      0l, 16777216l, 50331648l, 117440512l,
      251658240l, 520093696l, 1056964608l, 2130706432l,
      0l, 4294967296l, 12884901888l, 30064771072l,
      64424509440l, 133143986176l, 270582939648l, 545460846592l,
      0l, 1099511627776l, 3298534883328l, 7696581394432l,
      16492674416640l, 34084860461056l, 69269232549888l, 139637976727552l,
      0l, 281474976710656l, 844424930131968l, 1970324836974592l,
      4222124650659840l, 8725724278030336l, 17732923532771328l, 35747322042253312l,
      0l, 72057594037927936l, 216172782113783808l, 504403158265495552l,
      1080863910568919040l, 2233785415175766016l, 4539628424389459968l, 9151314442816847872l
    )
    val northwest = Array[BitMask](
      0l, 256l, 66048l, 16909312l,
      4328785920l, 1108169199616l, 283691315109888l, 72624976668147712l,
      0l, 65536l, 16908288l, 4328783872l,
      1108169195520l, 283691315101696l, 72624976668131328l, 145249953336262656l,
      0l, 16777216l, 4328521728l, 1108168671232l,
      283691314053120l, 72624976666034176l, 145249953332068352l, 290499906664136704l,
      0l, 4294967296l, 1108101562368l, 283691179835392l,
      72624976397598720l, 145249952795197440l, 290499905590394880l, 580999811180789760l,
      0l, 1099511627776l, 283673999966208l, 72624942037860352l,
      145249884075720704l, 290499768151441408l, 580999536302882816l, 1161999072605765632l,
      0l, 281474976710656l, 72620543991349248l, 145241087982698496l,
      290482175965396992l, 580964351930793984l, 1161928703861587968l, 2323857407723175936l,
      0l, 72057594037927936l, 144115188075855872l, 288230376151711744l,
      576460752303423488l, 1152921504606846976l, 2305843009213693952l, 4611686018427387904l,
      0l, 0l, 0l, 0l,
      0l, 0l, 0l, 0l
    )
  }
}